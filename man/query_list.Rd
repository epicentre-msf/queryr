% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_list.R
\name{query_list}
\alias{query_list}
\title{Data validation queries across a list of data frames}
\usage{
query_list(
  x,
  cond,
  element,
  cols_base,
  join_type = "left",
  join_by,
  pivot_long = TRUE,
  pivot_var = "variable",
  pivot_val = "value",
  as_chr = TRUE
)
}
\arguments{
\item{x}{A list of data frames}

\item{cond}{Expression to evaluate with respect to one or more variables in
one or more of the data frames within \code{x}.}

\item{element}{Name or integer index of the focal list element of \code{x} for the
given query. If the query expression \code{cond} references variables from list
elements apart from \code{element}, the relevant variable(s) will be joined to
\code{x[[element]]} before the query expression is evaluated, based on the
\code{join_type} and \code{join_by} arguments described below.}

\item{cols_base}{(Optional) Tidy-selection of other columns within \code{data} to
retain in the output. Can optionally be set for an entire session using
option "queryr_cols_base", e.g. \code{options(queryr_cols_base = quote(id:site))}.}

\item{join_type}{If \code{cond} references variables within elements of \code{x} apart
from \code{x[[element]]}, what type of join should be used to join the relevant
elements? Options are "left" (the default) and "inner". Based on dplyr
\code{\link[dplyr]{join}} types.}

\item{join_by}{A character vector of variables to join by. If the join key
columns have different names in \code{x[[element]]} and \code{x[[other]]}, use a
named vector. For example, \code{join_by = c("a" = "b")} will match
\code{x[[element]]$a} to \code{x[[other]]$b}.}

\item{pivot_long}{Logical indicating whether to pivot the variables
referenced within \code{cond} to a long (i.e. stackable) format, with default
column names "variable1", "value1", "variable2", "value2", ... Defaults to
\code{TRUE}.}

\item{pivot_var}{Prefix for pivoted variable column(s). Defaults to
"variable". Only used if \code{pivot_long = TRUE}.}

\item{pivot_val}{Prefix for pivoted value column(s). Defaults to "value".
Only used if \code{pivot_long = TRUE}.}

\item{as_chr}{Logical indicating whether to coerce the columns referenced in
the query expression \code{cond} to character prior to returning. This enables
row-binding multiple queries with variables of different classes, but is
only important if \code{pivot_long = TRUE}. Defaults to \code{TRUE}.}
}
\value{
A data frame reflecting the rows of \code{x[[element]]} that match the given
query. Returned columns include:
\itemize{
\item (optional) columns matched by argument \code{cols_base}
\item columns referenced within the query expression (pivoted to long form by
default)
}
}
\description{
Find observations matching a query that concerns one or more data frames
within a list of data frames, and return tidy, stackable output. Like
\code{\link{query}} but enables query expressions that reference variables in multiple
data frames.

If the query expression references variables from data frames (i.e. list
elements) other than the focal element, the relevant variable(s) will be
joined to the focal element before the query expression is evaluated, see
arguments \code{join_type} and \code{join_by} below.
}
